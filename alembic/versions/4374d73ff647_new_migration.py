"""New migration

Revision ID: 4374d73ff647
Revises: 
Create Date: 2025-09-19 17:58:08.973110

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4374d73ff647'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory',
    sa.Column('description', sa.Text(), nullable=True, comment='Note for manual adjustments, or link to a transaction.'),
    sa.Column('money_balance', sa.BigInteger(), nullable=False, comment='Cash balance in Rials'),
    sa.Column('new_gold', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('used_gold', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('persian_coin', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('molten_gold', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('saffron', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('dollar', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('euro', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('pound', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('emami_coin_86', sa.BigInteger(), nullable=False),
    sa.Column('half_coin_86', sa.BigInteger(), nullable=False),
    sa.Column('quarter_coin_86', sa.BigInteger(), nullable=False),
    sa.Column('emami_coin_etc', sa.BigInteger(), nullable=False),
    sa.Column('half_coin_etc', sa.BigInteger(), nullable=False),
    sa.Column('quarter_coin_etc', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_fa', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('measurement_type', sa.Enum('COUNTABLE', 'UNCOUNTABLE', name='measurementtype', native_enum=False), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_fa')
    )
    op.create_index(op.f('ix_item_category'), 'item', ['category'], unique=False)
    op.create_index(op.f('ix_item_name'), 'item', ['name'], unique=True)
    op.create_table('permission',
    sa.Column('name', sa.Enum('CONTACT_UPDATE_ALL', name='permissionname', native_enum=False), nullable=False),
    sa.Column('name_fa', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_fa')
    )
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=True)
    op.create_table('saved_bank_account',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('card_number', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saved_bank_account_card_number'), 'saved_bank_account', ['card_number'], unique=True)
    op.create_index(op.f('ix_saved_bank_account_name'), 'saved_bank_account', ['name'], unique=False)
    op.create_table('user',
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'USER', 'INVESTOR', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_phone_number'), 'user', ['phone_number'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('audit_log',
    sa.Column('user_id', sa.UUID(), nullable=True, comment='The user who performed the action. Can be null for system actions.'),
    sa.Column('operation', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='operationtype', native_enum=False), nullable=False),
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('before_state', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='The state of the record before the change (for UPDATE and DELETE).'),
    sa.Column('after_state', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='The state of the record after the change (for CREATE and UPDATE).'),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_operation'), 'audit_log', ['operation'], unique=False)
    op.create_index(op.f('ix_audit_log_table_name'), 'audit_log', ['table_name'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.create_table('contact',
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('national_number', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('CUSTOMER', 'SUPPLIER', 'INVESTOR', 'COLLEAGUE', name='contacttype'), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['creator_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_first_name'), 'contact', ['first_name'], unique=False)
    op.create_index(op.f('ix_contact_last_name'), 'contact', ['last_name'], unique=False)
    op.create_index(op.f('ix_contact_national_number'), 'contact', ['national_number'], unique=True)
    op.create_index(op.f('ix_contact_phone_number'), 'contact', ['phone_number'], unique=True)
    op.create_index(op.f('ix_contact_type'), 'contact', ['type'], unique=False)
    op.create_table('item_financial_profile',
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('transaction_type', sa.Enum('BUY', 'SELL', name='transactiontype', native_enum=False), nullable=False),
    sa.Column('karat_default', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ojrat_default', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('profit_default', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax_default', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_permission',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'permission_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_permission')
    op.drop_table('item_financial_profile')
    op.drop_index(op.f('ix_contact_type'), table_name='contact')
    op.drop_index(op.f('ix_contact_phone_number'), table_name='contact')
    op.drop_index(op.f('ix_contact_national_number'), table_name='contact')
    op.drop_index(op.f('ix_contact_last_name'), table_name='contact')
    op.drop_index(op.f('ix_contact_first_name'), table_name='contact')
    op.drop_table('contact')
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_table_name'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_operation'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_phone_number'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_saved_bank_account_name'), table_name='saved_bank_account')
    op.drop_index(op.f('ix_saved_bank_account_card_number'), table_name='saved_bank_account')
    op.drop_table('saved_bank_account')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_item_name'), table_name='item')
    op.drop_index(op.f('ix_item_category'), table_name='item')
    op.drop_table('item')
    op.drop_table('inventory')
    # ### end Alembic commands ###
